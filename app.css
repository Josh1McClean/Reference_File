/*THIS IS A COMMENT...THIS COINCIDES WITH THE CSS FILE*/
.blue-text {
    color: blue;
    font-size: 25px;
    font-family: 'Times New Roman', Times, serif;
}

.red-text {
    color: red;
    font-size: 15px;
    font-family: Georgia, 'Times New Roman', Times, serif;
}

#hello-world {
    text-decoration: overline;
}

#grocery-list ul li {
    color: green;
    background-color: black;
    width: 100px;
    height: 50px;
    /*PX: A unit of measurement used to define the size of various elements on a web page particularly
     concerning length, width, padding, margins, and font size*/
}

#todo-list ol li {
    color: yellow;
    background-color: purple;
    width: 5em;
    height: 5em;
    /* EM: A unit of measurement that is relative to the font-size of the element or, more precisely, the 
    font-size of its parent element*/

    /*REM IS ANOTHER CSS UNIT: Unlike the "em" unit, which is relative to the font size of the parent 
   element, the "rem" unit is relative to the font size of the root element (usually the <html> element */

    /* % IS ANOTHER CSS UNIT: The "%"(percent) unit is used to express a value as a percentage of another 
    value. The interpretation of the percentage depends on the property being used*/

    /* VW IS ANOTHER CSS UNIT: Stands for "viewport width," and it is a relative unit of measurement that represents a percentage of
    the width of the viewport (the browser's visible area). One viewport width unit is equal to 1% of the width of the viewport*/

    /* VH IS ANOTHER CSS UNIT: Stands for "viewport height," and it is a relative unit of measurement that represents a percentage of
    the height of the viewport (the browser's visible area). One viewport height unit is equal to 1% of the height of the viewport*/
}

/*THIS IS A COMMENT...THIS COINCIDES WITH THE CSS FILE*/

/*THIS IS A COMMENT...THESE ARE THE CORE CSS UNITS*/
/*PX, EM, REM, %, VW, VH*/
/*THIS IS A COMMENT...THESE ARE THE CORE CSS UNITS*/

/*THIS IS A COMMENT...THIS IS THE CSS BOX MODEL*/
div {
    border: 1px solid white;
    padding: 10px;
    margin: 20px;
    background-color: deeppink
}

.text {
    color: indigo;
}

/*THIS IS A COMMENT...THIS IS THE CSS BOX MODEL*/

/*THIS IS A COMMENT...THIS IS THE CSS POSITIONING*/
.position-div {
    background-color: red;
    position: static;
    /* position: relative;*/
    /*position: fixed;*/
    /*position: absolute;*/
    /*position: sticky;*/
    margin-left: 40px;
    top: -10px;
    /*THE POSITION CSS PROPERTY SETS HOW AN ELEMENT IS POSITIONED IN A DOCUMENT. THE TOP, RIGHT, BOTTOM, AND
    LEFT PROPERTIES DETERMINE THE FINAL LOCATION OF POSITIONED ELEMENTS. DEFAULT IS STATIC.
    SYNTAX: STATIC|RELATIVE|ABSOLUTE|STICKY|FIXED*/

    /*STATIC: is used to control the positioning of an element within its containing element. The static 
    value for the position property is the default value,and it means that the element is positioned 
    according to the normal flow of the document*/

    /*RELATIVE: Used to position an element relative to its normal position in the document flow. When an 
    element has "position: relative;" it can be shifted from its default position without affecting the 
    layout of other elements.*/

    /*ABSOLUTE: used to position an element relative to its nearest positioned (not static) ancestor or to 
    the initial containing block if no positioned ancestor is found. When an element has "position: 
    absolute;" it is taken out of the normal document flow, and its positioning is determined by its closest
    positioned ancestor.*/

    /*Z-INDEX: Used to control the stacking order of positioned elements along the z-axis (the axis 
    perpendicular to the screen). Elements with a higher z-index value will appear in front of elements with 
    a lower z-index value.*/
}

/*THIS IS A COMMENT...THIS IS THE CSS POSITIONING*/

/*THIS IS A COMMENT...THIS IS THE CSS LAYOUTS (FLEX BOX)*/
.container {
    display: flex;
    flex-direction: column;
    height: 100vh;
    justify-content: space-around;
}

.flex-row {
    flex: 1;
    border: 1px black solid;
}

.flex-rect-yellow {
    background-color: yellow;
}

.flex-rect-red {
    background-color: red;
}

.flex-rect-blue {
    background-color: blue;
}

/*THIS IS A COMMENT...THIS IS THE CSS LAYOUTS (FLEX BOX)*/